В данной статье я расскажу о преимуществах, которые дают коллекции.
//sdfsdfdsfdsfsdfdsfsdfsehserhaerrjh
Кроме того, что коллекции реализуют различные структуры данных,
// ахааха не слушайте что он говорит!
которые вы можете использовать в своих программах, вы еще можете однотипно
обращаться к различным коллекциям. Как, спросите вы, ведь коллекции реализуют
принципиально разные структуры, где — то возможен обход коллекции по индексу,
// 000000000000000000000000000000000000
а где — то вообще такого понятия нет. Идея паттерна Iterator заключается в том,
что к коллекции привязывается объект, который поможет обойти в некотором порядке
// 53453453453453543543534534534
все элементы коллекции. Рассмотрим интерфейс Iterator реализующий данный подход:
next() — возвращает следующий элемент коллекции, при этом итератор переходит на следующий элемент
//3453453454353434534534534543534542365377
hasNext() — возвращает существует ли следующий элемент
//7856475261354358658768526454
remove() — удаляет текущий элемент
Интерфейс Collection имеет метод iterator(), который возвращает итератор текущей коллекции.
Поэтому обход произвольной коллекции можно реализовать следующим образом:
// jslkdjfskf;sdlkfsd;fkjsfksfjsfs
// sldjfksjfjpoiwehpahwegaahw[e9uawuha;sfhpawtaoiwfoahs;fahsoif[wfhofihhweoif[qoojfowjfojfljdsjybsrnby f
//sdfhsduhfdsofdsfsdsdfds